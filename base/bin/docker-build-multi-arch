#!/usr/bin/env sh

#function finish {
  #docker logout
#}
#trap finish EXIT

set -e

# Inputs

if [ -z "${1}" ]; then echo "Image name required. ie willfarrell/codeship-docker"; exit 1; fi

IMAGE_NAME=$1
DOCKERFILE_PATH=${2:-'./'}
TAG_SUFFIX=${3:-''}
# TODO add flag to toggle push or not

echo "Building ${IMAGE_NAME}:${GIT_COMMIT_ID}${TAG_SUFFIX} from ${SOURCE_DIR}"

#if [ ! -z "${DOCKER_USERNAME}" ] && [ ! -z "${DOCKER_PASSWORD}" ]; then
  #DOCKER_REGISTRY=${DOCKER_REGISTRY:-'index.docker.io'}
  #echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
  # WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
  # https://docs.docker.com/engine/reference/commandline/login/#credentials-store
#fi

# Pull if exists
set +e
docker pull ${IMAGE_NAME}:${GIT_COMMIT_ID}${TAG_SUFFIX}
set -e

# Build and Push
docker build --tag ${IMAGE_NAME}:${GIT_COMMIT_ID}${TAG_SUFFIX} ${DOCKERFILE_PATH}

## :commit
docker push ${IMAGE_NAME}:${GIT_COMMIT_ID}${TAG_SUFFIX}

## :latest
if [ "${ENVIRONMENT}" == "production" ] && [ "${TAG_SUFFIX}" == "" ]; then
  docker tag ${IMAGE_NAME}:${GIT_COMMIT_ID} ${IMAGE_NAME}:latest
  docker push ${IMAGE_NAME}:latest
fi

## :environment
if [ "${ENVIRONMENT}" != "" ]; then
  docker tag ${IMAGE_NAME}:${GIT_COMMIT_ID}${TAG_SUFFIX} ${IMAGE_NAME}:${ENVIRONMENT}${TAG_SUFFIX}
  docker push ${IMAGE_NAME}:${ENVIRONMENT}${TAG_SUFFIX}
fi

## :v0.0.0
if [ "${GIT_COMMIT_TAG}" != "" ]; then
  docker tag ${IMAGE_NAME}:${GIT_COMMIT_ID}${TAG_SUFFIX} ${IMAGE_NAME}:${GIT_COMMIT_TAG}${TAG_SUFFIX}
  docker push ${IMAGE_NAME}:${GIT_COMMIT_TAG}${TAG_SUFFIX}
fi

# TODO scan image for sec issue

#finish
